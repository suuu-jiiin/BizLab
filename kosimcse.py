# -*- coding: utf-8 -*-
"""KoSIMCSE.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KsgvyO75PAsO_WA0QEqcWarPNyq024Or
"""

import numpy as np
import pandas as pd
import json
import re
import seaborn as sns
#from flask import Flask, request
#import threading
import pandas as pd
#from sqlalchemy import create_engine
#import textwrap

from sentence_transformers import SentenceTransformer, util

model = SentenceTransformer('BM-K/KoSimCSE-roberta')


#embeddings = model.encode(questions, convert_to_tensor=True)
#similarity_matrix = util.cos_sim(embeddings, embeddings)
#print(similarity_matrix)

with open('simplified_survey_result.json', 'r', encoding='utf-8-sig') as f:
  data = json.load(f)

# 내용 확인
print(data)

questions=[items['질문 내용'] for items in data ['results']]

start=29
end=36
type_question=questions[start:end]

from sentence_transformers import SentenceTransformer, util

def calculate_similarity(base_question, other_questions, start, end, model_name='BM-K/KoSimCSE-roberta'):
    model = SentenceTransformer(model_name)

    # 임베딩
    all_sentences = [base_question] + other_questions
    embeddings = model.encode(all_sentences, convert_to_tensor=True)

    base_emb = embeddings[0]
    others_emb = embeddings[1:]

    # 유사도 계산
    results = []
    for i, emb in enumerate(others_emb):
        sim = util.cos_sim(base_emb, emb).item()
        #results.append([[base_question, other_questions[i]], sim])
        results.append([[base_question, f'Q.{start+i+1}'], sim])

    # 유사도 내림차순 정렬
    results.sort(key=lambda x: x[1], reverse=True)
    return results

base='휴대폰 이용 알람은 사용자 행동에 영향을 미치지 못한다.'
similarities = calculate_similarity(base, type_question,start=start,end=end)
similarities

